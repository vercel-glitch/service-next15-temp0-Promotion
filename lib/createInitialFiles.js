// import fs from "fs";
import path from "path";

export const checkOrCreateSitemap = ({ DOMAIN }) => {
  // Updated XSL template with black links and alternating row colors
  const xslTemplate = `<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet version="2.0" 
                xmlns:html="http://www.w3.org/TR/REC-html40"
                xmlns:sitemap="http://www.sitemaps.org/schemas/sitemap/0.9"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
  <xsl:output method="html" version="1.0" encoding="UTF-8" indent="yes"/>
  <xsl:template match="/">
    <html xmlns="http://www.w3.org/1999/xhtml">
      <head>
        <title>XML Sitemap</title>
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <style type="text/css">
          body {
            font-family: Arial, sans-serif;
            font-size: 13px;
            color: #333;
            margin: 0 auto;
            max-width: 800px;
            padding: 10px 20px;
          }
          h1 {
            font-size: 24px;
            color: #555;
            margin-bottom: 5px;
          }
          p {
            margin: 5px 0;
            font-size: 14px;
            line-height: 1.3;
          }
          .title {
            color: #cc0000;
            font-weight: bold;
          }
          a {
            color: #000; /* Black links */
            text-decoration: none;
          }
          a:hover {
            text-decoration: underline; /* Underline on hover */
          }
          table {
            border-collapse: collapse;
            width: 100%;
            margin: 10px 0;
            border-top: 1px solid #ddd;
            border-bottom: 1px solid #ddd;
          }
          th {
            background-color: #fff;
            padding: 8px;
            text-align: left;
            border-bottom: 1px solid #ddd;
            font-weight: bold;
            font-size: 14px;
          }
          td {
            padding: 6px 8px;
            border-bottom: 1px solid #ddd;
            font-size: 13px;
          }
          /* Alternating row colors */
          tr:nth-child(odd) {
            background-color: #f5f5f5; /* Light gray for odd rows */
          }
          tr:nth-child(even) {
            background-color: #fff; /* White for even rows */
          }
          tr:hover {
            background-color: #eee; /* Slightly darker on hover */
          }
        </style>
      </head>
      <body>
        <h1>XML Sitemap</h1>
        
        <p>Generated by <span class="title">%TITLE%</span>, this is an XML Sitemap, meant for consumption by search engines.</p>
        
        <p>You can find more information about XML sitemaps on <a href="https://www.sitemaps.org" style="color: #cc0000;">sitemaps.org</a>.</p>
        
        <xsl:choose>
          <xsl:when test="count(sitemap:sitemapindex/sitemap:sitemap) &gt; 0">
            <p>This XML Sitemap Index file contains <xsl:value-of select="count(sitemap:sitemapindex/sitemap:sitemap)"/> sitemaps.</p>
            
            <table id="sitemap" cellpadding="3">
              <thead>
                <tr>
                  <th width="75%">Sitemap</th>
                  <th width="25%">Last Modified</th>
                </tr>
              </thead>
              <tbody>
                <xsl:for-each select="sitemap:sitemapindex/sitemap:sitemap">
                  <tr>
                    <td>
                      <a href="{sitemap:loc}">
                        <xsl:value-of select="sitemap:loc" />
                      </a>
                    </td>
                    <td>
                      <xsl:value-of select="sitemap:lastmod" />
                    </td>
                  </tr>
                </xsl:for-each>
              </tbody>
            </table>
          </xsl:when>
          <xsl:otherwise>
            <p>This XML Sitemap contains <xsl:value-of select="count(sitemap:urlset/sitemap:url)"/> URLs.</p>
            
            <table id="sitemap" cellpadding="3">
              <thead>
                <tr>
                  <th width="75%">URL</th>
                  <th width="25%">Last Mod.</th>
                </tr>
              </thead>
              <tbody>
                <xsl:for-each select="sitemap:urlset/sitemap:url">
                  <tr>
                    <td>
                      <a href="{sitemap:loc}">
                        <xsl:value-of select="sitemap:loc" />
                      </a>
                    </td>
                    <td>
                      <xsl:value-of select="sitemap:lastmod" />
                    </td>
                  </tr>
                </xsl:for-each>
              </tbody>
            </table>
          </xsl:otherwise>
        </xsl:choose>
      </body>
    </html>
  </xsl:template>
</xsl:stylesheet>`;

  return xslTemplate;
};
